<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- 扫描 -->
	<!-- 自定义扫描包 -->
	<!-- 不扫描 Controller注解-->
	<context:component-scan base-package="dao,service,servlet,controller">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Component"/>  
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	
	<!-- <context:component-scan base-package="dao"></context:component-scan>
	<context:component-scan base-package="service"></context:component-scan>
	<context:component-scan base-package="servlet"></context:component-scan> -->
	<!-- 引入外部文件 数据源所需路径 classpath文件的路径 -->
	<context:property-placeholder location="classpath:db.properties"/>
	
	<!-- 为了让AOP的注解生效 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<aop:config proxy-target-class="true"></aop:config>
	
	 <!-- 配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="${jdbc.account}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="driverClass" value="${jdbc.class}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
	</bean>
	
	<!-- 配置 Spirng 的 JdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean> 
	
	<bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="jdbcTemplate"></constructor-arg>
	</bean>
	
	 <!-- 定义事务管理器(声明式的事务) --> 
	 <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <!-- 配置事务属性 -->
	<tx:advice id="txadv" transaction-manager="transactionManager">
		<!-- 根据方法名指定事务的属性 -->
		<tx:attributes>
			<!-- 指定已add开头的方法名 他的传播途径为REQUIRED 方法执行超过20秒就强制回滚 隔离级别配置了一个提交的-->
			<tx:method name="add*" propagation="REQUIRED" timeout="20" isolation="READ_COMMITTED"/>
			<tx:method name="upd*" propagation="REQUIRED" timeout="20" isolation="READ_COMMITTED"/>
			<tx:method name="quer*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="dele*" propagation="REQUIRED" timeout="20" isolation="READ_COMMITTED"/>
			<tx:method name="inse*" propagation="REQUIRED" timeout="20" isolation="READ_COMMITTED"/>
			<tx:method name="check*" propagation="REQUIRED" timeout="20" isolation="READ_COMMITTED"/>
		</tx:attributes>
	</tx:advice>
	<aop:config >
		 <aop:pointcut id="interceptorPointCuts"
            expression="(execution(* service.goods.*.*(..))) or (execution(* service.advert.*.*(..))) or (execution(* service.material.*.*(..)))" />
        <aop:advisor advice-ref="txadv"
            pointcut-ref="interceptorPointCuts" />   
	</aop:config>

</beans>
